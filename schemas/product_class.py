from graphene import Int, String, Boolean, Field, relay
from graphene_sqlalchemy import SQLAlchemyObjectType
from schemas.product_type import ProductType
import models

import utils


class ProductClassAttribute():
    class_id = Int(description="Product class unique id number")
    type_id = Int(description="Product type Relationship id number")
    class_name = String(description="Name of the class")
    display_name = String(description="Name displayed of the class")
    is_system = Boolean(description="Generated by the system")


class ProductClass(SQLAlchemyObjectType, ProductClassAttribute):
    """Product Class node"""
    data_loader_product_type = utils.DataLoaderOneToOne(models.ProductClass, models.ProductType)

    def resolve_product_type(self, info):
        return ProductClass.data_loader_product_type.load(self.class_id)

    class Meta:
        model = models.ProductClass
        interfaces = (relay.Node,)
